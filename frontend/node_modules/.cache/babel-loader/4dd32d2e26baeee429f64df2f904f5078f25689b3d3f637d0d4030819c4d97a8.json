{"ast":null,"code":"var _jsxFileName = \"D:\\\\ecommerce\\\\backend\\\\frontend\\\\src\\\\pages\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Col, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from './FormContainer';\nimport { useNavigate } from \"react-router-dom\";\nimport { savePaymentMethod } from '../components/actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaymentPage() {\n  _s();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [paymentMethod, setPaymentMethod] = useState('Cash on Delivery');\n  if (!shippingAddress.address) {\n    navigate('/shipping');\n  }\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    navigate('/placeorder');\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Cash on Delivery\",\n            id: \"cashondelivery\",\n            name: \"paymentMethod\",\n            value: \"Cash on Delivery\",\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Paypal or Credit Card\",\n            id: \"paypal\",\n            name: \"paymentMethod\",\n            value: \"Paypal\",\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), paymentMethod === 'Paypal' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pay with your international accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 48\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Razorpay\",\n            id: \"razorpay\",\n            name: \"paymentMethod\",\n            value: \"Razorpay\",\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), paymentMethod === 'Razorpay' ? /*#__PURE__*/_jsxDEV(Card, {\n            bg: \"info\",\n            class: true,\n            body: true,\n            children: \"Pay with any Indian payment mode such as Phonepe, Google pay, Paytm, Internetbanking, Credit or Debit cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 50\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"mt-2\",\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentPage, \"xnJlHOOKVI1bD0tj5hEc4Foai5g=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","Form","Col","Button","Card","useDispatch","useSelector","FormContainer","useNavigate","savePaymentMethod","CheckoutSteps","jsxDEV","_jsxDEV","PaymentPage","_s","cart","state","shippingAddress","dispatch","navigate","paymentMethod","setPaymentMethod","address","submitHandler","e","preventDefault","children","step1","step2","step3","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","Label","as","className","Check","type","label","id","name","value","onChange","target","bg","class","body","variant","_c","$RefreshReg$"],"sources":["D:/ecommerce/backend/frontend/src/pages/PaymentPage.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport { Form,Col,Button,Card } from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport FormContainer from './FormContainer'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { savePaymentMethod } from '../components/actions/cartActions'\r\n\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nexport default function PaymentPage() {\r\n    const cart = useSelector(state =>state.cart)\r\n    const {shippingAddress} = cart\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const[paymentMethod, setPaymentMethod] = useState('Cash on Delivery')\r\n\r\n    if(!shippingAddress.address){\r\n        navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3/>\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n                <Form.Label as='legend'>Select Method</Form.Label>\r\n                <Col className='mt-2'>\r\n                <Form.Check \r\n                type='radio'\r\n                label = 'Cash on Delivery'\r\n                id='cashondelivery'\r\n                name=\"paymentMethod\"\r\n                value='Cash on Delivery'\r\n                onChange={(e)=>setPaymentMethod(e.target.value)}\r\n                >\r\n                </Form.Check>\r\n                </Col>\r\n\r\n                <Col className='mt-2'>\r\n                \r\n                <Form.Check\r\n                type='radio'\r\n                label = 'Paypal or Credit Card'\r\n                id='paypal'\r\n                name=\"paymentMethod\"\r\n                value='Paypal'\r\n                onChange={(e)=>setPaymentMethod(e.target.value)}\r\n                >\r\n                \r\n                </Form.Check>\r\n                {paymentMethod === 'Paypal' ? (<span>\r\n                Pay with your international accounts</span>):\"\"}\r\n                \r\n                </Col>\r\n\r\n                <Col className='mt-2'>\r\n                <Form.Check\r\n                type='radio'\r\n                label = 'Razorpay'\r\n                id='razorpay'\r\n                name=\"paymentMethod\"\r\n                value='Razorpay'\r\n                onChange={(e)=>setPaymentMethod(e.target.value)}\r\n                >\r\n\r\n                </Form.Check>\r\n                {paymentMethod === 'Razorpay' ? (<Card bg='info' class body>Pay with any Indian payment mode such as Phonepe, Google pay, Paytm, Internetbanking, Credit or Debit cards</Card>\r\n                ):\"\"}\r\n\r\n                </Col>\r\n\r\n                \r\n            </Form.Group>\r\n\r\n            <Button className='mt-2' type='submit' variant='primary'>\r\n                Continue\r\n            </Button>\r\n\r\n        </Form>\r\n\r\n    </FormContainer>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}