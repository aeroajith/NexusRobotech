{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducers, productDetailsReducers } from './components/reducers/productReducers';\nimport { cartReducer } from './components/reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './components/reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, myOrderListReducer } from './components/reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  myOrdersList: myOrderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","myOrderListReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","myOrdersList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["D:/ecommerce/frontend/src/store.js"],"sourcesContent":["import { createStore,combineReducers,applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducers, productDetailsReducers } from './components/reducers/productReducers'\r\nimport { cartReducer } from './components/reducers/cartReducers'\r\nimport { userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer } from './components/reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer,orderPayReducer, myOrderListReducer } from './components/reducers/orderReducers'\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n      productList:productListReducers,\r\n      productDetails:productDetailsReducers,\r\n      cart:cartReducer,\r\n      userLogin:userLoginReducer,\r\n      userRegister:userRegisterReducer,\r\n      userDetails:userDetailsReducer,\r\n      userUpdateProfile:userUpdateProfileReducer,\r\n      orderCreate:orderCreateReducer,\r\n      orderDetails:orderDetailsReducer,\r\n      orderPay:orderPayReducer,\r\n      myOrdersList:myOrderListReducer\r\n\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? \r\n    JSON.parse(localStorage.getItem('cartItems')) :[]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \r\n    JSON.parse(localStorage.getItem('userInfo')) :null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? \r\n    JSON.parse(localStorage.getItem('shippingAddress')) :{}\r\n\r\nconst initialState = {\r\n    cart : {cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},\r\n    \r\n    userLogin:{userInfo:userInfoFromStorage},\r\n    \r\n}\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer,initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,WAAW,EAACC,eAAe,EAACC,eAAe,QAAQ,OAAO;AACnE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,mBAAmB,EAAEC,sBAAsB,QAAQ,uCAAuC;AACnG,SAASC,WAAW,QAAQ,oCAAoC;AAChE,SAASC,gBAAgB,EAACC,mBAAmB,EAACC,kBAAkB,EAACC,wBAAwB,QAAQ,oCAAoC;AACrI,SAASC,kBAAkB,EAAEC,mBAAmB,EAACC,eAAe,EAAEC,kBAAkB,QAAQ,qCAAqC;AAIjI,MAAMC,OAAO,GAAGf,eAAe,CAAC;EAC1BgB,WAAW,EAACZ,mBAAmB;EAC/Ba,cAAc,EAACZ,sBAAsB;EACrCa,IAAI,EAACZ,WAAW;EAChBa,SAAS,EAACZ,gBAAgB;EAC1Ba,YAAY,EAACZ,mBAAmB;EAChCa,WAAW,EAACZ,kBAAkB;EAC9Ba,iBAAiB,EAACZ,wBAAwB;EAC1Ca,WAAW,EAACZ,kBAAkB;EAC9Ba,YAAY,EAACZ,mBAAmB;EAChCa,QAAQ,EAACZ,eAAe;EACxBa,YAAY,EAACZ;AAGnB,CAAC,CAAC;AAEF,MAAMa,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAE,EAAE;AAErD,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAE,IAAI;AAEtD,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAE,CAAC,CAAC;AAE3D,MAAMK,YAAY,GAAG;EACjBhB,IAAI,EAAG;IAACiB,SAAS,EAACR,oBAAoB;IAACS,eAAe,EAACH;EAA0B,CAAC;EAElFd,SAAS,EAAC;IAACkB,QAAQ,EAACL;EAAmB;AAE3C,CAAC;AACD,MAAMM,UAAU,GAAG,CAACpC,KAAK,CAAC;AAC1B,MAAMqC,KAAK,GAAGxC,WAAW,CAACgB,OAAO,EAACmB,YAAY,EAC1C/B,mBAAmB,CAACF,eAAe,CAAC,GAAGqC,UAAU,CAAC,CAAC,CAAC;AAExD,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}