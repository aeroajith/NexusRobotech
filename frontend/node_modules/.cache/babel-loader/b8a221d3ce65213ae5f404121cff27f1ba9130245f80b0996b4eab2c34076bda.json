{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducers, productDetailsReducers, productDeleteReducers, productCreateReducers, productUpdateReducers, productReviewReducers } from './components/reducers/productReducers';\nimport { cartReducer } from './components/reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateReducer, userListReducer, userDeleteReducer, userUpdateProfileReducer } from './components/reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, myOrderListReducer, orderListReducer, orderDeliverReducer } from './components/reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  productCreate: productCreateReducers,\n  productUpdate: productUpdateReducers,\n  productDelete: productDeleteReducers,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userList: userListReducer,\n  userDetails: userDetailsReducer,\n  userUpdate: userUpdateReducer,\n  userDelete: userDeleteReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  myOrderList: myOrderListReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n  productReview: productReviewReducers\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","productDeleteReducers","productCreateReducers","productUpdateReducers","productReviewReducers","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateReducer","userListReducer","userDeleteReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","myOrderListReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productCreate","productUpdate","productDelete","cart","userLogin","userRegister","userList","userDetails","userUpdate","userDelete","userUpdateProfile","orderCreate","orderDetails","orderPay","myOrderList","orderList","orderDeliver","productReview","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["D:/ecommerce/frontend/src/store.js"],"sourcesContent":["import { createStore,combineReducers,applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducers, productDetailsReducers,productDeleteReducers, productCreateReducers, productUpdateReducers, productReviewReducers } from './components/reducers/productReducers'\r\nimport { cartReducer } from './components/reducers/cartReducers'\r\nimport { userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateReducer,userListReducer,userDeleteReducer,userUpdateProfileReducer } from './components/reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer,orderPayReducer, myOrderListReducer, orderListReducer, orderDeliverReducer } from './components/reducers/orderReducers'\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n      productList:productListReducers,\r\n      productDetails:productDetailsReducers,\r\n      productCreate:productCreateReducers,\r\n      productUpdate:productUpdateReducers,\r\n      productDelete:productDeleteReducers,\r\n      cart:cartReducer,\r\n      userLogin:userLoginReducer,\r\n      userRegister:userRegisterReducer,\r\n      userList:userListReducer,\r\n      userDetails:userDetailsReducer,\r\n      userUpdate:userUpdateReducer,\r\n      userDelete:userDeleteReducer,\r\n      userUpdateProfile:userUpdateProfileReducer,\r\n      orderCreate:orderCreateReducer,\r\n      orderDetails:orderDetailsReducer,\r\n      orderPay:orderPayReducer,\r\n      myOrderList:myOrderListReducer,\r\n      orderList:orderListReducer,\r\n      orderDeliver: orderDeliverReducer,\r\n      productReview:productReviewReducers\r\n\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? \r\n    JSON.parse(localStorage.getItem('cartItems')) :[]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \r\n    JSON.parse(localStorage.getItem('userInfo')) :null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? \r\n    JSON.parse(localStorage.getItem('shippingAddress')) :{}\r\n\r\nconst initialState = {\r\n    cart : {cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},\r\n    \r\n    userLogin:{userInfo:userInfoFromStorage},\r\n    \r\n}\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer,initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,WAAW,EAACC,eAAe,EAACC,eAAe,QAAQ,OAAO;AACnE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,mBAAmB,EAAEC,sBAAsB,EAACC,qBAAqB,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,uCAAuC;AAC9L,SAASC,WAAW,QAAQ,oCAAoC;AAChE,SAASC,gBAAgB,EAACC,mBAAmB,EAACC,kBAAkB,EAACC,iBAAiB,EAACC,eAAe,EAACC,iBAAiB,EAACC,wBAAwB,QAAQ,oCAAoC;AACzL,SAASC,kBAAkB,EAAEC,mBAAmB,EAACC,eAAe,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,mBAAmB,QAAQ,qCAAqC;AAIxK,MAAMC,OAAO,GAAGxB,eAAe,CAAC;EAC1ByB,WAAW,EAACrB,mBAAmB;EAC/BsB,cAAc,EAACrB,sBAAsB;EACrCsB,aAAa,EAACpB,qBAAqB;EACnCqB,aAAa,EAACpB,qBAAqB;EACnCqB,aAAa,EAACvB,qBAAqB;EACnCwB,IAAI,EAACpB,WAAW;EAChBqB,SAAS,EAACpB,gBAAgB;EAC1BqB,YAAY,EAACpB,mBAAmB;EAChCqB,QAAQ,EAAClB,eAAe;EACxBmB,WAAW,EAACrB,kBAAkB;EAC9BsB,UAAU,EAACrB,iBAAiB;EAC5BsB,UAAU,EAACpB,iBAAiB;EAC5BqB,iBAAiB,EAACpB,wBAAwB;EAC1CqB,WAAW,EAACpB,kBAAkB;EAC9BqB,YAAY,EAACpB,mBAAmB;EAChCqB,QAAQ,EAACpB,eAAe;EACxBqB,WAAW,EAACpB,kBAAkB;EAC9BqB,SAAS,EAACpB,gBAAgB;EAC1BqB,YAAY,EAAEpB,mBAAmB;EACjCqB,aAAa,EAACnC;AAGpB,CAAC,CAAC;AAEF,MAAMoC,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAE,EAAE;AAErD,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAE,IAAI;AAEtD,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GACtEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAE,CAAC,CAAC;AAE3D,MAAMK,YAAY,GAAG;EACjBtB,IAAI,EAAG;IAACuB,SAAS,EAACR,oBAAoB;IAACS,eAAe,EAACH;EAA0B,CAAC;EAElFpB,SAAS,EAAC;IAACwB,QAAQ,EAACL;EAAmB;AAE3C,CAAC;AACD,MAAMM,UAAU,GAAG,CAACtD,KAAK,CAAC;AAC1B,MAAMuD,KAAK,GAAG1D,WAAW,CAACyB,OAAO,EAAC4B,YAAY,EAC1CjD,mBAAmB,CAACF,eAAe,CAAC,GAAGuD,UAAU,CAAC,CAAC,CAAC;AAExD,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}